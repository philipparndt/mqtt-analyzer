# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Build iOS"
  lane :incbuild do
    increment_build_number(
      xcodeproj: "MQTTAnalyzer.xcodeproj"
    )
  end

  lane :tests do
    scan(
      scheme: "MQTTAnalyzer",
      devices: ["iPhone 13 Pro", "iPhone SE (3rd generation)", "iPad Pro (11-inch) (3rd generation)"],
      parallel_testing: true,
      concurrent_workers: 10,
      verbose: true
    )
  end

  lane :archive do
    gym()
  end

  lane :upload do
    upload_to_app_store(
      username: "#{ENV['FASTLANE_USER']}",
      platform: "ios", 
      ipa: "MQTTAnalyzer.ipa",
      force: true,
      skip_screenshots: true
    )
  end

  lane :publish do
    tests()
    archive()
    upload()
  end

  lane :screenshots do
    capture_screenshots(workspace: "MQTTAnalyzer.xcworkspace", scheme: "MQTTAnalyzer")
  end
end

platform :mac do
  desc "Build macOS"

  lane :tests do
    run_tests(
      scheme: "MQTTAnalyzer",
      destination: "platform=macOS,arch=x86_64,variant=Mac Catalyst"
    )
  end
  
  lane :archive do
    gym(
      catalyst_platform: "macos",
      destination: "generic/platform=macOS,variant=Mac Catalyst",
    )
  end

  lane :upload do
    upload_to_app_store(
      username: "#{ENV['FASTLANE_USER']}",
      platform: "osx", 
      pkg: "MQTTAnalyzer.pkg",
      force: true,
      skip_screenshots: true
    )
  end

  lane :publish do
    # tests() # TODO: tests are not possible here, due to realm header issues. Tests have to run separately (done by the publish script).
    archive()
    upload()
  end

  lane :screenshots do
    capture_screenshots(workspace: "MQTTAnalyzer.xcworkspace", scheme: "MQTTAnalyzer")
  end
end
